import java.io.InputStreamReader;
import java.io.BufferedReader;
import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import java.util.Random;
import java.util.ArrayList;
import java.util.Arrays;

public class Node {
    private byte[] nodeID = new byte[20];;
    private String ip;
    private int port;
    public  KBucket k_bucket = null;
    public ArrayList<Node> closest = null;

    public Node(int port, String ip) {
        // generate 20 bytes ou 160 bits random 
        Random rd = new Random();
        rd.nextBytes(nodeID);
        this.ip=ip;
        this.port=port;
    }

    public Node(byte[] nid, int port, String ip) {
        // generate 20 bytes ou 160 bits random 
        Random rd = new Random();
        rd.nextBytes(nodeID);
        this.ip=ip;
        this.port=port;
        this.nodeID = nid;
    }
    
    public int get_Port(){
        return this.port;
    }

    public String get_PortStr(){
        return String.valueOf(this.port);
    }

    public String get_Ip(){
        return ip;
    }

    public byte[] getNodeID() {
        return nodeID;
    }
    public String getNodeIDStr() {
        return new String(nodeID);
    }

    public String getBinaryStr() {
        String aux = "";
        for (int i = 0; i < nodeID.length; i++) {
            aux += String.format("%8s", Integer.toBinaryString(nodeID[i] & 0xFF)).replace(' ', '0');
        }
        return aux;
    }

    public void to_String(){
        System.out.println("nodeID: " + this.nodeID + " ip: "+this.ip + " port: "+this.port);
    }

}